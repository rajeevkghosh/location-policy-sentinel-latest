import "strings"
import "types"

_modules = {
	"root": {
		"data":    {},
		"modules": {},
		"outputs": {},
		"providers": {
			"google": {
				"alias": {
					"": {
						"config": {
							"project":               "airline1-sabre-wolverine",
							"user_project_override": true,
						},
						"references": {
							"access_token": [
								"var.access_token",
							],
							"project":               [],
							"user_project_override": [],
						},
						"version": "",
					},
				},
				"config": {
					"project":               "airline1-sabre-wolverine",
					"user_project_override": true,
				},
				"references": {
					"access_token": [
						"var.access_token",
					],
					"project":               [],
					"user_project_override": [],
				},
				"version": "",
			},
		},
		"resources": {
			"google_container_cluster": {
				"primary": {
					"config": {
						"initial_node_count": 1,
						"ip_allocation_policy": [
							{
								"cluster_ipv4_cidr_block": null,
							},
						],
						"location": "us-central1",
						"name":     "my-gke-cluster",
						"private_cluster_config": [
							{
								"enable_private_endpoint": false,
								"enable_private_nodes":    false,
							},
						],
						"remove_default_node_pool": true,
					},
					"provisioners": null,
					"references": {
						"initial_node_count": [],
						"ip_allocation_policy": [
							{
								"cluster_ipv4_cidr_block": [],
							},
						],
						"location": [],
						"name":     [],
						"private_cluster_config": [
							{
								"enable_private_endpoint": [],
								"enable_private_nodes":    [],
							},
						],
						"remove_default_node_pool": [],
					},
				},
			},
			"google_container_node_pool": {
				"primary_preemptible_nodes": {
					"config": {
						"location": "us-central1",
						"name":     "my-node-pool",
						"node_config": [
							{
								"machine_type": "e2-medium",
								"oauth_scopes": [
									"https://www.googleapis.com/auth/cloud-platform",
								],
								"preemptible": true,
							},
						],
						"node_count": 1,
					},
					"provisioners": null,
					"references": {
						"cluster": [
							"google_container_cluster.primary.name",
							"google_container_cluster.primary",
						],
						"location": [],
						"name":     [],
						"node_config": [
							{
								"machine_type": [],
								"oauth_scopes": [],
								"preemptible":  [],
								"service_account": [
									"google_service_account.default.email",
									"google_service_account.default",
								],
							},
						],
						"node_count": [],
					},
				},
			},
			"google_service_account": {
				"default": {
					"config": {
						"account_id":   "service-account-id",
						"display_name": "Service Account",
					},
					"provisioners": null,
					"references": {
						"account_id":   [],
						"display_name": [],
					},
				},
			},
		},
		"variables": {
			"access_token": {
				"default":     null,
				"description": "access_token",
			},
		},
	},
}

module_paths = [
	[],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
