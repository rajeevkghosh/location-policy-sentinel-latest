import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"access_token": {
				"references": [
					"var.access_token",
				],
			},
		},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
}

resources = {
	"google_spanner_instance.example": {
		"address": "google_spanner_instance.example",
		"config": {
			"config": {
				"constant_value": "nam3",
			},
			"display_name": {
				"constant_value": "us-dev_abcd_fghi_spanner1",
			},
			"labels": {
				"constant_value": {
					"application_division": "pci",
					"application_name":     "demo",
					"application_role":     "app",
					"au":                   "0223092",
					"created":              "20211122",
					"data_compliance":      "pci",
					"data_confidentiality": "pub",
					"data_type":            "test",
					"env":                  "default",
					"environment":          "dev",
					"gcp_region":           "us",
					"owner":                "hybridenv",
				},
			},
			"num_nodes": {
				"constant_value": 2,
			},
			"project": {
				"constant_value": "airline1-sabre-wolverine",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_spanner_instance",
	},
}

provisioners = {}

variables = {
	"access_token": {
		"default":        null,
		"description":    "access token",
		"module_address": "",
		"name":           "access_token",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
